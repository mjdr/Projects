package pentester.controllers;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import pentester.domain.JsonResponse;
import pentester.domain.UserData;
import pentester.models.UserRole;
import pentester.services.LoginService;
import pentester.services.PageService;

@Controller
@RequestMapping("/page")
public class PageController {

	@Autowired
	private LoginService loginService;

	@Autowired
	private PageService pageService;

	@RequestMapping(value = "/list")
	@ResponseBody
	public JsonResponse list(HttpSession session) {

		if (!loginService.isLoggedIn(session))
			return new JsonResponse("error", "user not enter in system");

		return new JsonResponse("ok", pageService.getAllVisiblePagesWithoutSource());
	}

	@RequestMapping(value = "/data/{id}")
	@ResponseBody
	public JsonResponse data(HttpSession session, @PathVariable long id) {

		if (!loginService.isLoggedIn(session))
			return new JsonResponse("error", "user not enter in system");

		UserData user = loginService.getCurrentUser(session);
		if (user.getRole() != UserRole.ADMIN && !user.isCanSeePages())
			return new JsonResponse("error", "user don't have permission for view pages");

		return new JsonResponse("ok", pageService.getPageById(id));
	}

	@RequestMapping(value = "/raw/{id}")
	@ResponseBody
	public String raw(HttpSession session, @PathVariable long id) {

		if (!loginService.isLoggedIn(session))
			return "error: user not enter in system";
		UserData user = loginService.getCurrentUser(session);
		if (user.getRole() != UserRole.ADMIN && !user.isCanSeePages())
			return "error: user don't have permission for view pages";

		return pageService.getPageById(id).getSource();
	}

}
